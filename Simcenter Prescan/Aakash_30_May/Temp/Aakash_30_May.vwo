self.vismainwindow.setViewerSimulationActive(False)
vismanager.setSimulationFrequency(20)
vismanager.initDefaultLight(True)
light_root.sun.setDirection(-1, 1, -1)
light_root.sun.setAmbient(0.5882353, 0.5882353, 0.5882353, 1)
light_root.sun.setDiffuse(0.4117647, 0.4117647, 0.4117647, 1)
light_root.sun.setSpecular(0.5882353, 0.5882353, 0.5882353, 1)
light_root.setGlobalAmbientColor(0, 0, 0, 1.0)
light_root.sun.setIntensity(1)
light_root.sun.setShadowMode(visnodes.VisLight.ShadowMode.SHADOW_ON)

light_root.setMinimumWorldBBox(True, -572.5209, -521.8873, 0, 809.4261, 798.5504, 0)
light_root.setShadowSoftnessWidth(0.00075);light_root.setShadowJitteringScale(32)
light_root.sun.setShadowTextureSize(4096)

skybox_visual_world = visnodes.VisBackground.createSkybox(vismanager.getVisScene().getShaderScene(), r"skybox_visual_world", r"SKY_Air", 1)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world);mat.setColors(1.176471, 1.176471, 1.176471, 1.0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
skybox_visual_world_bottom = visnodes.VisTerrain.createTerrain(r"skybox_visual_world_bottom", 1000, 1000, r"Air_Terrain_Diffuse_Color.png", 20000, 20000, -50, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world_bottom);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0, 0, 0, 1)
skybox_visual_world_container = visnodes.VisTransform.createTransformNode(r"skybox_visual_world_container")
skybox_visual_world_container.setNodeMask(8, False)
skybox_visual_world_container.addChild(skybox_visual_world)
non_shader_scene.addChild(skybox_visual_world_container)

terrain_visual_world = visnodes.VisTerrain.createTerrain(r"terrain_visual_world", 2316.14, 2257.56, "Air_Terrain_Diffuse_Color.png", 2316.14, 2257.56)
mat = visnodes.VisMaterial_createAndSetVisMaterial(terrain_visual_world);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1, 0.7843137, 0.7843137, 0.7843137, 1, 0, 0, 0, 1, 0, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setShininess(0);mat.applyComponents(terrain_visual_world, mat.SHININESS, True)
terrain_visual_world_container = visnodes.VisTransform.createTransformNode(r"terrain_visual_world_container")
terrain_visual_world_container.setNodeMask(16, False)
terrain_visual_world_container.addChild(terrain_visual_world)
scene.addChild(terrain_visual_world_container)
terrain_visual_world_container.addChild(skybox_visual_world_bottom)
terrain_visual_world.setTranslation(118.45263671875, 138.33154296875, 0)

Munich_Model_Blender_model_1 = visnodes.VisTransform.load( r"Munich_Model_Blender_model_1", r"Munich_model\Munich_model\Munich_Model_Blender_modw.osgb", True )
Munich_Model_Blender_model_1.setNodeMask(0xFFFFFFFF, True)
Munich_Model_Blender_model_1.setNodeMaskOnGeodes(70016)
scene.addChild(Munich_Model_Blender_model_1)
scene.Munich_Model_Blender_model_1.setTranslation(0, 0, 0)
scene.Munich_Model_Blender_model_1.setRotation(0, 1, 0, 0)

Tesla_Model_3_1 = visnodes.VisTransform.load( r"Tesla_Model_3_1", r"Vehicles\TeslaModel3\TeslaModel3.osgb", True )
Tesla_Model_3_1.setNodeMask(0xFFFFFFFF, True)
Tesla_Model_3_1.setNodeMaskOnGeodes(70016)
scene.addChild(Tesla_Model_3_1)
scene.Tesla_Model_3_1.getTransformChild("SteeringWheel_pivot")
scene.Tesla_Model_3_1.getTransformChild("SteeringColumn_pivot")
scene.Tesla_Model_3_1.getTransformChild("WheelL0_Suspension")
scene.Tesla_Model_3_1.getTransformChild("WheelL0_SteerPivot")
scene.Tesla_Model_3_1.getTransformChild("WheelL0")
scene.Tesla_Model_3_1.getTransformChild("WheelL1_Suspension")
scene.Tesla_Model_3_1.getTransformChild("WheelL1_SteerPivot")
scene.Tesla_Model_3_1.getTransformChild("WheelL1")
scene.Tesla_Model_3_1.getTransformChild("WheelR0_Suspension")
scene.Tesla_Model_3_1.getTransformChild("WheelR0_SteerPivot")
scene.Tesla_Model_3_1.getTransformChild("WheelR0")
scene.Tesla_Model_3_1.getTransformChild("WheelR1_Suspension")
scene.Tesla_Model_3_1.getTransformChild("WheelR1_SteerPivot")
scene.Tesla_Model_3_1.getTransformChild("WheelR1")
scene.Tesla_Model_3_1.getTransformChild("BrakeLightM_Pivot")
scene.Tesla_Model_3_1.getTransformChild("BrakeIndicatorLightRL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("BrakeIndicatorLightRR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("FogLightFL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("FogLightFR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("IndicatorFL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("IndicatorSL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("IndicatorFR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("IndicatorSR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("MainLightFL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("MainLightFR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("ParkingLightFL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("ParkingLightFR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("ParkingLightFR_Orange_Pivot")
scene.Tesla_Model_3_1.getTransformChild("ParkingLightFL_Orange_Pivot")
scene.Tesla_Model_3_1.getTransformChild("ParkingLightFR_White_Pivot")
scene.Tesla_Model_3_1.getTransformChild("ParkingLightFL_White_Pivot")
scene.Tesla_Model_3_1.getTransformChild("MainLightRL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("MainLightRR_Pivot")
scene.Tesla_Model_3_1.getTransformChild("BackupLightL_Pivot")
scene.Tesla_Model_3_1.getTransformChild("BackupLightR_Pivot")
scene.Tesla_Model_3_1.setTranslation(-380.91738761148724, -377.96412226932159, 0)
scene.Tesla_Model_3_1.setRotation(1.2017435755115748, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.BrakeLightM_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.BrakeIndicatorLightRL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.BrakeIndicatorLightRR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.FogLightFL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.FogLightFR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.IndicatorFL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.IndicatorSL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.IndicatorFR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.IndicatorSR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.MainLightFL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.MainLightFR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.ParkingLightFL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.ParkingLightFR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.ParkingLightFR_Orange_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.ParkingLightFL_Orange_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.9098039, 0.9098039, 0.9098039, 1, 0.9098039, 0.9098039, 0.9098039, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.ParkingLightFR_White_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(0.9098039, 0.9098039, 0.9098039, 1, 0.9098039, 0.9098039, 0.9098039, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.ParkingLightFL_White_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.MainLightRL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.MainLightRR_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.BackupLightL_Mesh, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Tesla_Model_3_1.BackupLightR_Mesh, mat.ALL_RGB, True,True)
visnodes.VisRecolorTools_recolorRegionsOnNode(scene.Tesla_Model_3_1, False, 3.282, 0, 0, False, 0, 0, 0, False, 0, 0, 0, False, 0, 0, 0)
visnodes.VisTexture_loadSplatMaps(scene.Tesla_Model_3_1, r"Vehicles\TeslaModel3")

world = visnodes.VisTransform.load("world", "world.osgb", False)
scene.addChild(world)
light_root.generateShaderFromTemplate(True)
